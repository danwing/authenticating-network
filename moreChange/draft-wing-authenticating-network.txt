



Network Working Group                                            D. Wing
Internet-Draft                                                    Citrix
Intended status: Informational                                  T. Reddy
Expires: 2 March 2023                                              Nokia
                                                          29 August 2022


                  Authenticating a Network Connection
                draft-wing-authenticating-network-latest

Abstract

   This document describes how a a client uses encrypted DNS to reduce
   an attacker's capabilities if the attacker is operating a look-alike
   network.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://danwing.github.io/authenticating-network/draft-wing-
   authenticating-network.html.  Status information for this document
   may be found at https://datatracker.ietf.org/doc/draft-wing-
   authenticating-network/.

   Source for this draft and an issue tracker can be found at
   https://github.com/danwing/authenticating-network.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 2 March 2023.

Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Procedure
   4.  Avoiding Trust on First Use
   5.  Common WiFi Names
   6.  Security Considerations
   7.  IANA Considerations
   8.  References
     8.1.  Normative References
     8.2.  Informative References
   Appendix A.  Extending WiFi QR Code
   Acknowledgments
   Authors' Addresses

1.  Introduction

   When a client connects to a wireless network the user or their device
   want to be sure the connection is to the expected network, as
   different networks provides different services -- performance,
   security, access to split-horizon DNS servers, and so on.  Although
   802.1X provides layer 2 security for both Ethernet and WiFi networks,
   802.1X is not widely deployed and unavailable on LTE and 5G networks
   -- and often applications are unaware if the underlying network was
   protected with 802.1X.

   On WiFi networks a malicious actor can operate a rogue access point
   with the same SSID and WPA-PSK as the victim network [Evil-Twin].  In
   many deployments (for example, coffee shops and bars) offer free Wi-
   Fi as a customer incentive.  Since these businesses are not Internet
   service providers, they are often unwilling and/or unqualified to
   perform complex configuration on their network.  In addition,
   customers are generally unwilling to do complicated provisioning on
   their devices just to obtain free Wi-Fi.  This leads to a popular
   deployment technique -- a network protected using a shared and public
   Pre-Shared Key (PSK) that is printed on a sandwich board at the
   entrance, on a chalkboard on the wall, or on a menu.  The PSK is used
   in a cryptographic handshake, defined in [IEEE802.11], called the
   "4-way handshake" to prove knowledge of the PSK and derive traffic
   encryption keys for bulk wireless data.  The same deployement
   technique is typically used in residential or small office/home
   office networks.  If the Pre-Shared Key (PSK) for wireless
   authentication is the same for all clients that connect to the same
   WLAN, the shared key will be available to all nodes, including
   attackers, so it is possible to mount an active on-path attack.

   This document describes how a wired or wireless client can utilize
   network-advertised encrypted DNS servers to ensure the attacker has
   no more visibility to the client's DNS traffic than the legitimate
   network.  In cases where the local network provides its own encrypted
   DNS server, the client can even ensure it has re-connected to the
   same network, offering the client enough information to positively
   detect a significant change in the encrypted DNS server configuration
   -- a strong indicator of an attacker operating the network.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Procedure

   Client connects to network and obtains network information via
   DHCPv4, DHCPv6, or RA.  The network indicates its encrypted DNS
   server using either [DNR] or [DDR].  The client connects to that
   encrypted DNS server, completes the TLS handshake and performs public
   key validation of the presented certificate as normal.

   The client can associate the WiFi network name (SSID) and the Basic
   Service Set Identifier (BSSID) with the encrypted DNS server's
   identity (TLS SubjectAltName) that was learned via [DNR] or [DDR].

      todo: Improve the discussion, below, of multiple BSSIDs

   Some WiFi deployments have multiple BSSIDs where 802.11r coordinates
   session keys amongst access points.  When moving between such access
   points, re-authentication ensures those APs are part of the same
   network and their BSSIDs can be added to the list of BSSIDs for this
   SSID.

      todo: the following TOFU is not specific to this I-D, I would say
      it's a burden of DDR/DNR to do user validation of the DNS server,
      isn't it?  (yes, I know that means the user won't get prompted.  I
      think that is okay.)

   If this is the first time connecting to that encrypted DNS server's
   identity, an action can be performed such as prompting the user for
   verification, verifying the encrypted DNS server's certificate with
   the fingerprint provided in an extended WiFi QR code (Appendix A),
   consulting a crowd-sourced database, reputation system, or -- perhaps
   best -- using a matching SSID and SubjectAltName described in
   Section 4.  After this step, the relationship of SSID, BSSID,
   encrypted resolver discovery mechanism, and SubjectAltName are stored
   on the client.

   For illustrative purpose, below is an example of the data stored for
   two WiFi networks, "Example WiFi" and "Example2 WiFi",

     SSID:"Example WiFi"; BSSID:"d8:c7:c8:44:32:40":
     Discovery:"DNR"; Identity:"resolver1.example.com".
     SSID:"Example2 WiFi"; BSSID:"d8:c7:c8:44:32:42":
     Discovery:"DDR"; Identity:"8.8.8.8".

      todo: Tiru, what is the above data format?  How about using JSON
      like below.  Note I also added non-precise GPS coordinates (just
      two decimal places which is approximately 1km resolution).  I also
      added two BSSIDs and two DNS servers for example2.

      { "networks": [{
           "SSID": "Example WiFi",
           "BSSID": ["d8:c7:c8:44:32:40"],
           "Discovery": "DNR",
           "Encrypted DNS": "resolver1.example.com"
      },{
           "SSID": "Example2 WiFi",
           "BSSID": ["d8:c7:c8:44:32:49", "d8:c7:c8:44:32:50"],
           "Discovery": "DDR",
           "Encrypted DNS": ["8.8.8.8","1.1.1.1"]   }]}

   If this is not the first time connecting to this same SSID then the
   WiFi network name, BSSID, encrypted resolver disovery mechanism and
   encrypted DNS server's identity should all match for this re-
   connection.  If the encrypted DNS server's identity differs, this
   indicates a different network than expected -- either a different
   network (that happens to also use the same SSID) or an Evil Twin
   attack.  The client can then take appropriate action.

      todo: if a network advertises 8.8.8.8 via DNR or DDR, we can't
      detect an evil twin.  How do we identify 8.8.8.8 as a public DNS
      server?  Could we say the network-advertise encrypted DNS server
      has to be on the same network (RFC1918 space or same /64) as the
      client obtained??  But that seems somewhat constraining.  Another
      idea is "if you've seen this same certificate via another SSID",
      but that doesn't work well, either: for example, I have a single
      DNS server in my house for all of my various SSIDs (guest, IoT,
      home network, work network).  Hmm.  Need more ideas.

4.  Avoiding Trust on First Use

   Trust on First Use can be avoided if the SSID name and DNS server's
   Subject Alt Name match.  Unfortunately such a constraint disallows
   vanity SSID names.  Also, social engineering attacks gain additional
   information if the network's physical address (123-Main-
   Street.example.net) or name (John-Jones.example.net) is included as
   part of the SSID.  Thus the only safe SSID name provides no
   information to assist social engineering attacks such as a customer
   number (customer-123.example.net), assuming the customer number can
   safely be disclosed to neighbors.  Such attacks are not a concern in
   deployments where the network name purposefully includes the business
   name or address (e.g., 123-Main-Street.example.com, coffee-
   bar.example.com).

5.  Common WiFi Names

   (( probably want to delete this section ))

   Some WiFi names are pretty common such as "Airport WiFi" or "Hotel
   WiFi" or "Guest" but are distinct networks with different WPA-PSK or
   are not using security at all ("open" networks).

   In other deployments, the same WiFi name is used in many locations
   around the world, such as branch offices of a corporation.

6.  Security Considerations

   The network authentication mechanism relies on an attacker's
   inability to obtain a signed certificate for the victim's domain
   name.

7.  IANA Considerations

   This document has no IANA actions.

8.  References

8.1.  Normative References

   [DDR]      Pauly, T., Kinnear, E., Wood, C. A., McManus, P., and T.
              Jensen, "Discovery of Designated Resolvers", Work in
              Progress, Internet-Draft, draft-ietf-add-ddr-10, 5 August
              2022, <https://datatracker.ietf.org/doc/html/draft-ietf-
              add-ddr-10>.

   [DNR]      Boucadair, M., Reddy, T., Wing, D., Cook, N., and T.
              Jensen, "DHCP and Router Advertisement Options for the
              Discovery of Network-designated Resolvers (DNR)", Work in
              Progress, Internet-Draft, draft-ietf-add-dnr-13, 13 August
              2022, <https://datatracker.ietf.org/doc/html/draft-ietf-
              add-dnr-13>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

8.2.  Informative References

   [Evil-Twin]
              Wikipedia, "Evil twin (wireless networks)", June 2022,
              <https://en.wikipedia.org/wiki/
              Evil_twin_(wireless_networks)>.

   [IEEE802.11]
              Wikipedia, "IEEE802.11", August 2022,
              <https://en.wikipedia.org/wiki/IEEE_802.11>.

   [RFC8110]  Harkins, D., Ed. and W. Kumari, Ed., "Opportunistic
              Wireless Encryption", RFC 8110, DOI 10.17487/RFC8110,
              March 2017, <https://www.rfc-editor.org/rfc/rfc8110>.

   [RFC8792]  Watsen, K., Auerswald, E., Farrel, A., and Q. Wu,
              "Handling Long Lines in Content of Internet-Drafts and
              RFCs", RFC 8792, DOI 10.17487/RFC8792, June 2020,
              <https://www.rfc-editor.org/rfc/rfc8792>.

Appendix A.  Extending WiFi QR Code

   This section is non-normative and merely explains how extending the
   WiFi QR code could work.  QR codes come with their own security
   risks, most signficant that an attacker can place their own QR code
   over a legitimate QR code.

   Several major smartphone operating systems support a QR code with the
   following format for the SSID "example" with WPA-PSK "password",

   WIFI:T:WPA;S:example;P:password;;

   This could be extended to add a field containing the fingerprint of
   the encrypted DNS server certificate.  As several DNS servers can be
   included in the QR code with "D:", each DNS server with its own
   certificate using [RFC8792] line folding,

   WIFI:T:WPA;S:example;P:password; \
   D:df81dfa6b61eafdffffe1a250240db5d2e6cee25, \
   D:28b236db27ff688f919b171e59e2fab81f9e4f2e;;

Acknowledgments

   This document was inspired by IETF review comments from Paul Wouters
   and Wes Eddy.

Authors' Addresses

   Dan Wing
   Citrix
   Email: dwing-ietf@fuggles.com


   Tirumaleswar Reddy
   Nokia
   Email: kondtir@gmail.com
